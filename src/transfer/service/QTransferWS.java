
package transfer.service;

import java.util.List;
import javax.activation.DataHandler;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QTransferWS", targetNamespace = "http://service.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QTransferWS {


    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "GetBusinessFunctions")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetBusinessFunctions", targetNamespace = "http://service.org/", className = "transfer.service.GetBusinessFunctions")
    @ResponseWrapper(localName = "GetBusinessFunctionsResponse", targetNamespace = "http://service.org/", className = "transfer.service.GetBusinessFunctionsResponse")
    @Action(input = "http://service.org/QTransferWS/GetBusinessFunctionsRequest", output = "http://service.org/QTransferWS/GetBusinessFunctionsResponse")
    public List<String> getBusinessFunctions();

    /**
     * 
     * @param arg0
     * @return
     *     returns transfer.service.QResult
     */
    @WebMethod(operationName = "InsertUploadInfo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "InsertUploadInfo", targetNamespace = "http://service.org/", className = "transfer.service.InsertUploadInfo")
    @ResponseWrapper(localName = "InsertUploadInfoResponse", targetNamespace = "http://service.org/", className = "transfer.service.InsertUploadInfoResponse")
    @Action(input = "http://service.org/QTransferWS/InsertUploadInfoRequest", output = "http://service.org/QTransferWS/InsertUploadInfoResponse")
    public QResult insertUploadInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        QUploadInfo arg0);

    /**
     * 
     * @return
     *     returns java.util.List<transfer.service.QTemplateMap>
     */
    @WebMethod(operationName = "GetTemplateMaps")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetTemplateMaps", targetNamespace = "http://service.org/", className = "transfer.service.GetTemplateMaps")
    @ResponseWrapper(localName = "GetTemplateMapsResponse", targetNamespace = "http://service.org/", className = "transfer.service.GetTemplateMapsResponse")
    @Action(input = "http://service.org/QTransferWS/GetTemplateMapsRequest", output = "http://service.org/QTransferWS/GetTemplateMapsResponse")
    public List<QTemplateMap> getTemplateMaps();

    /**
     * 
     * @param business
     * @return
     *     returns java.util.List<transfer.service.QTransferData>
     */
    @WebMethod(operationName = "GetTransferDatasV2")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetTransferDatasV2", targetNamespace = "http://service.org/", className = "transfer.service.GetTransferDatasV2")
    @ResponseWrapper(localName = "GetTransferDatasV2Response", targetNamespace = "http://service.org/", className = "transfer.service.GetTransferDatasV2Response")
    @Action(input = "http://service.org/QTransferWS/GetTransferDatasV2Request", output = "http://service.org/QTransferWS/GetTransferDatasV2Response")
    public List<QTransferData> getTransferDatasV2(
        @WebParam(name = "business", targetNamespace = "")
        String business);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetWebSocketUri")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetWebSocketUri", targetNamespace = "http://service.org/", className = "transfer.service.GetWebSocketUri")
    @ResponseWrapper(localName = "GetWebSocketUriResponse", targetNamespace = "http://service.org/", className = "transfer.service.GetWebSocketUriResponse")
    @Action(input = "http://service.org/QTransferWS/GetWebSocketUriRequest", output = "http://service.org/QTransferWS/GetWebSocketUriResponse")
    public String getWebSocketUri();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "ExtractTypes")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ExtractTypes", targetNamespace = "http://service.org/", className = "transfer.service.ExtractTypes")
    @ResponseWrapper(localName = "ExtractTypesResponse", targetNamespace = "http://service.org/", className = "transfer.service.ExtractTypesResponse")
    @Action(input = "http://service.org/QTransferWS/ExtractTypesRequest", output = "http://service.org/QTransferWS/ExtractTypesResponse")
    public boolean extractTypes(
        @WebParam(name = "arg0", targetNamespace = "")
        QStatusCode arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        StatusCode arg1);

    /**
     * 
     * @return
     *     returns java.util.List<transfer.service.QBusinessInfo>
     */
    @WebMethod(operationName = "GetBusinessInfo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetBusinessInfo", targetNamespace = "http://service.org/", className = "transfer.service.GetBusinessInfo")
    @ResponseWrapper(localName = "GetBusinessInfoResponse", targetNamespace = "http://service.org/", className = "transfer.service.GetBusinessInfoResponse")
    @Action(input = "http://service.org/QTransferWS/GetBusinessInfoRequest", output = "http://service.org/QTransferWS/GetBusinessInfoResponse")
    public List<QBusinessInfo> getBusinessInfo();

    /**
     * 
     * @param id
     * @return
     *     returns transfer.service.QTransferData
     */
    @WebMethod(operationName = "GetTransferData")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetTransferData", targetNamespace = "http://service.org/", className = "transfer.service.GetTransferData")
    @ResponseWrapper(localName = "GetTransferDataResponse", targetNamespace = "http://service.org/", className = "transfer.service.GetTransferDataResponse")
    @Action(input = "http://service.org/QTransferWS/GetTransferDataRequest", output = "http://service.org/QTransferWS/GetTransferDataResponse")
    public QTransferData getTransferData(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @return
     *     returns transfer.service.QSettings
     */
    @WebMethod(operationName = "GetSettings")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetSettings", targetNamespace = "http://service.org/", className = "transfer.service.GetSettings")
    @ResponseWrapper(localName = "GetSettingsResponse", targetNamespace = "http://service.org/", className = "transfer.service.GetSettingsResponse")
    @Action(input = "http://service.org/QTransferWS/GetSettingsRequest", output = "http://service.org/QTransferWS/GetSettingsResponse")
    public QSettings getSettings();

    /**
     * 
     * @param bytes
     * @param client
     * @return
     *     returns transfer.service.QResult
     */
    @WebMethod(operationName = "Upload")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Upload", targetNamespace = "http://service.org/", className = "transfer.service.Upload")
    @ResponseWrapper(localName = "UploadResponse", targetNamespace = "http://service.org/", className = "transfer.service.UploadResponse")
    @Action(input = "http://service.org/QTransferWS/UploadRequest", output = "http://service.org/QTransferWS/UploadResponse")
    public QResult upload(
        @WebParam(name = "client", targetNamespace = "")
        QClientData client,
        @WebParam(name = "bytes", targetNamespace = "")
        DataHandler bytes);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Lock")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Lock", targetNamespace = "http://service.org/", className = "transfer.service.Lock")
    @ResponseWrapper(localName = "LockResponse", targetNamespace = "http://service.org/", className = "transfer.service.LockResponse")
    @Action(input = "http://service.org/QTransferWS/LockRequest", output = "http://service.org/QTransferWS/LockResponse")
    public boolean lock(
        @WebParam(name = "arg0", targetNamespace = "")
        QTransferData arg0);

    /**
     * 
     * @param transfer
     * @return
     *     returns transfer.service.QResult
     */
    @WebMethod(operationName = "Update")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Update", targetNamespace = "http://service.org/", className = "transfer.service.Update")
    @ResponseWrapper(localName = "UpdateResponse", targetNamespace = "http://service.org/", className = "transfer.service.UpdateResponse")
    @Action(input = "http://service.org/QTransferWS/UpdateRequest", output = "http://service.org/QTransferWS/UpdateResponse")
    public QResult update(
        @WebParam(name = "transfer", targetNamespace = "")
        QTransferData transfer);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Unlock")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Unlock", targetNamespace = "http://service.org/", className = "transfer.service.Unlock")
    @ResponseWrapper(localName = "UnlockResponse", targetNamespace = "http://service.org/", className = "transfer.service.UnlockResponse")
    @Action(input = "http://service.org/QTransferWS/UnlockRequest", output = "http://service.org/QTransferWS/UnlockResponse")
    public boolean unlock(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

}
